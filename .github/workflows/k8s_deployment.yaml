name: Deploy to Kubernetes Cluster

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - task_*

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

env:
  TERRAFORM_VERSION: '1.9.6'
  AWS_GHA_ROLE: 'arn:aws:iam::035511759406:role/GithubActionsRole'
  AWS_REGION: 'us-east-1'

jobs:
  k8s:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Install helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          
      - name: Setup kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Check k8s nodes
        run: |
          kubectl get nodes

      - name: Add Bitnami Helm repository
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami

      - name: Update Helm repositories
        run: |
          helm repo update

      - name: Create a namespace for Prometheus
        run: |
          kubectl apply -f prometheus/prometheus-namespace.yaml

      - name: Check if Helm release 'prometheus' exists
        id: helm_status_prom
        run: |
          if helm list --namespace monitoring | grep -q 'prometheus'; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Upgrade or Install Helm Chart 'prometheus'
        run: |
          if [ "${{ steps.helm_status_prom.outputs.exists }}" == "true" ]; then
            helm upgrade prometheus bitnami/prometheus --namespace monitoring -f prometheus/prometheus-values.yaml
          else
            helm install prometheus bitnami/prometheus --namespace monitoring -f prometheus/prometheus-values.yaml
          fi

      - name: Check if Helm release 'node-exporter' exists
        id: helm_status_node
        run: |
          if helm list --namespace monitoring | grep -q 'node-exporter'; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Upgrade or Install Helm Chart 'node-exporter'
        run: |
          if [ "${{ steps.helm_status_node.outputs.exists }}" == "true" ]; then
            helm upgrade node-exporter bitnami/node-exporter --namespace monitoring
          else
            helm install node-exporter bitnami/node-exporter --namespace monitoring
          fi

      - name: Check if Helm release 'kube-state-metrics' exists
        id: helm_status_kube
        run: |
          if helm list --namespace monitoring | grep -q 'kube-state-metrics'; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Upgrade or Install Helm Chart 'kube-state-metrics'
        run: |
          if [ "${{ steps.helm_status_kube.outputs.exists }}" == "true" ]; then
            helm upgrade kube-state-metrics bitnami/kube-state-metrics --namespace monitoring
          else
            helm install kube-state-metrics bitnami/kube-state-metrics --namespace monitoring
          fi

      - name: Getting of Prometheus public URL
        run: |
          kubectl get svc prometheus-server --namespace monitoring -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
